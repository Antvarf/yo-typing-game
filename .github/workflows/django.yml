name: Test & deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Write SSH keys and hosts data
      run: |      
        install -m 600 -D /dev/null ~/.ssh/id_ed25519
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
        ssh-keyscan -H "${{ secrets.SSH_HOST }}" > ~/.ssh/known_hosts
    - name: Build image & run tests
      run: |
        docker build . -t ${{ secrets.REGISTRY_HOST }}/yo_typing_backend:2.$GITHUB_RUN_NUMBER  -t ${{ secrets.REGISTRY_HOST }}/yo_typing_backend:latest
        docker run --name test_container ${{ secrets.REGISTRY_HOST }}/yo_typing_backend:2.$GITHUB_RUN_NUMBER /app/manage.py test
    - name: Upload new image to registry
      run: |
        docker login -u=${{ secrets.REGISTRY_USER }} -p="${{ secrets.REGISTRY_PASSWORD }}" ${{ secrets.REGISTRY_HOST }}
        docker push --all-tags ${{ secrets.REGISTRY_HOST }}/yo_typing_backend
    - name: Restart production containers
      run: |
        ssh mike@${{ secrets.SSH_HOST }} sudo docker pull ${{ secrets.REGISTRY_HOST }}/yo_typing_backend
        ssh mike@${{ secrets.SSH_HOST }} sudo docker-compose up -d
    - name: Push new app static to server
      run: |
        docker cp test_container:/app/static static
        rsync -r static/* mike@${{ secrets.SSH_HOST }}:django_static
