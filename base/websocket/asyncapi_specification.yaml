asyncapi: '2.6.0'
info:
  title: Yo the game
  version: '0.2'
  contact:
    name: JarJar
  description:
    Yass we slay

servers:
  public:
    url: wss://yo-typing.ru/ws
    protocol: wss

channels:
  /play/{sessionId}/:
    parameters:
      sessionId:
        description: |
          The id of the session.
        schema:
          type: string
          format: uuid
    bindings:
      ws:
        query:
          type: object
          properties:
            username:
              type: string
              description: the displayed name of the player
            jwt:
              type: string
              format: JWT
              description: authentication token for player (if authenticated)
    subscribe:
      operationId: serverEvent
      summary: Events sent FROM server TO client
      message:
        oneOf:
          - $ref: "#/components/messages/initial_state"
          - $ref: "#/components/messages/players_update"
          - $ref: "#/components/messages/game_begins"
          - $ref: "#/components/messages/start_game"
          - $ref: "#/components/messages/new_word"
          - $ref: "#/components/messages/game_over"
          - $ref: "#/components/messages/votes_update"
          - $ref: "#/components/messages/new_game"

    publish:
      operationId: playerEvent
      summary: Events sent FROM client TO server
      message:
        oneOf:
          - $ref: "#/components/messages/ready_state"
          - $ref: "#/components/messages/word"
          - $ref: "#/components/messages/player_vote"

components:
  messages:
  ## Client messages
    ready_state:
      summary: Sent by player to change the ready state.
      payload:
        $ref: '#/components/schemas/ready_state'
      tags:
        - name: preparation_stage

    word:
      summary: Message for player to supply words to server.
      payload:
        $ref: '#/components/schemas/word'
      tags:
        - name: game_stage

    player_vote:
      summary: Message for player to select next game mode.
      payload:
        $ref: '#/components/schemas/player_vote'
      tags:
        - name: vote_stage

    ## Server messages
    initial_state:
      summary: Provides player with the current session room state
      payload:
        $ref: '#/components/schemas/initial_state'
      tags:
        - name: preparation_stage

    players_update:
      summary: |
        Notifies about any updates to the players state
        (e.g. players joining/leaving/changing ready state)
      payload:
        $ref: '#/components/schemas/players_update'
      tags:
        - name: preparation_stage
        - name: game_stage
        - name: vote_stage

    game_begins:
      summary: |
        Notifies that game will shortly (after a specified countdown) begin
      payload:
        $ref: '#/components/schemas/game_begins'
      tags:
        - name: preparation_stage

    start_game:
      summary: Starts the game.
      payload:
        $ref: '#/components/schemas/start_game'
      tags:
        - name: preparation_stage

    new_word:
      summary: Supplies a new word when any player submits one.
      payload:
        $ref: '#/components/schemas/new_word'
      tags:
        - name: game_stage

    game_over:
      summary: Notifies the game is over with game results.
      payload:
        $ref: '#/components/schemas/game_over'
      tags:
        - name: game_stage

    votes_update:
      summary: Contains the updated vote states.
      payload:
        $ref: '#/components/schemas/votes_update'
      tags:
        - name: vote_stage

    new_game:
      summary: Contains the info about the next game.
      payload:
        $ref: '#/components/schemas/new_game'
      tags:
        - name: vote_stage

  schemas:
    ## General schema definitions
    event:
      type: object
      discriminator: type
      properties:
        type:
          type: string
      required:
        - type

    competitor_stats:
      type: object
      properties:
        score:
          type: integer
        speed:
          type: number
        timeLeft:
          type: number
      required:
        - score
        - speed
        - timeLeft

    competitor_results:
      type: object
      properties:
        isWinner:
          type: boolean
      required:
        - isWinner

    player:
      type: object
      allOf:
        - $ref: '#/components/schemas/competitor_stats'
        - properties:
            id:
              type: integer
            displayedName:
              type: string
            isReady:
              type: boolean
            isFinished:
              description: |
                Is present if words are limited
              type: boolean
            isOut:
              description: |
                Is present if survival is on
              type: boolean
            teamName:
              description: |
                Is present if playing in teams
              type: string
          required:
            - id
            - displayedName
            - isReady

    players:
      type: array
      items:
        - $ref: '#/components/schemas/player'

    player_results:
      type: array
      items:
        - allOf:
            - $ref: '#/components/schemas/player'
            - $ref: '#/components/schemas/competitor_results'

    team:
      type: object
      allOf:
        - $ref: '#/components/schemas/competitor_stats'
        - properties:
            players:
              $ref: '#/components/schemas/players'
          required:
            - players

    teams:
      type: object
      properties:
        red:
          $ref: '#/components/schemas/team'
        blue:
          $ref: '#/components/schemas/team'
      required:
        - red
        - blue

    teams_results:
      type: object
      properties:
        red:
          allOf:
            - $ref: '#/components/schemas/team'
            - $ref: '#/components/schemas/competitor_results'
        blue:
          allOf:
            - $ref: '#/components/schemas/team'
            - $ref: '#/components/schemas/competitor_results'
      required:
        - red
        - blue

    game_results:
      oneOf:
        - $ref: '#/components/schemas/player_results'
        - $ref: '#/components/schemas/teams_results'

    player_related_event:
      type: object
      oneOf:
        - properties:
            players:
              $ref: '#/components/schemas/players'
          required:
            - players
        - properties:
            teams:
              $ref: '#/components/schemas/teams'
          required:
            - teams

    ## Server message schemas
    initial_state:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: object
              allOf:
                - $ref: '#/components/schemas/player_related_event'
                - properties:
                    player:
                      $ref: '#/components/schemas/player'
                    words:
                      type: array
                      items:
                        type: string
                  required:
                    - words

    players_update:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              $ref: '#/components/schemas/player_related_event'

    game_begins:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: integer
          required:
            - data

    start_game:
      type: object
      $ref: '#/components/schemas/event'

    new_word:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: string
          required:
            - data

    game_over:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              $ref: '#/components/schemas/game_results'

    votes_update:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: array
              items:
                type: object
                properties:
                  mode:
                    type: string
                  voteCount:
                    type: integer
                required:
                  - mode
                  - voteCount
          required:
            - data

    new_game:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: string
              format: uuid
              description: session_id of the new session created
          required:
            - data

    ## Client message schemas
    ready_state:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: boolean
          required:
            - data

    word:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            word:
              type: string
          required:
            - word

    player_vote:
      type: object
      allOf:
        - $ref: '#/components/schemas/event'
        - properties:
            data:
              type: string
          required:
            - data
